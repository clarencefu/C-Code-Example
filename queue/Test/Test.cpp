
//#undef _UNICODE
#pragma warning( disable : 4996)
#include <stdio.h>
#include <utility>

#include <tchar.h>
#include "header.h"
#include "header.h"
#include <windows.h>
#include <math.h>
#include <deque>
#include <queue>

#include <assert.h>

struct TTimeline
{
	long long startTick = 0;
	long long endTick = 0;
};

inline int GetIndexFromId( int Id ) { return Id / 10 - 10; }

int main() 
{
	char input2[] = "50263290575266: Cccustom, CORE 6, Event generated by PID 1017, TID 41\n";
	char input[] = "50263290575266: Custom, CORE 6, Event generated by PID 1017, TID 41\n"
		"Kind : 100, Size : 4 bytes\n"
		"0x00000000 : 70 6C 63 30\n"
		"50263290623608 : SRI to Windows, CORE 6, Event generated by PID 1017, TID 41";

	int a;
	int ResultGet = sscanf( input, "%*d: Custom, CORE %*d, Event generated by PID %*d, TID %d\n", &a );

	std::queue<TTimeline> queue[10];

	//get 100
	TTimeline timeline;
	timeline.startTick = 11111111;

	queue[GetIndexFromId(100)].push( timeline );

	//get 101
	if ( queue[GetIndexFromId( 101 )].front().endTick != 0 )
	{
		assert( 0 );
	}
	queue[GetIndexFromId( 101 )].front().endTick = 222222;


	return 0;
}

